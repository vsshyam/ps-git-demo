- name: This play will automate provisioning the containers
  hosts: localhost
  tasks:
    - name: Provision ubuntu docker container
      docker_container:
        docker_host: tcp://0.0.0.0:4236
        name: "ubuntu{{item}}"
        hostname: "ubuntu{{item}}"
        image: bofa/ansible-ubuntu
        state: started
        ports:
          - "2{{item}}:22"
          - "8{{item}}:80"
      with_sequence: start=1 end=4 format="%03x"
        
    - name: Provision ubuntu docker container
      docker_container:
        docker_host: tcp://0.0.0.0:4236
        name: "centos{{item}}"
        hostname: "centos{{item}}"
        image: tektutor/ansible-centos
        state: started
        ports:
          - "3{{item}}:22"
          - "9{{item}}:80"
      with_sequence: start=1 end=4 format="%03x"

- name: playbook to install, configure and deploy web page into tomcat
  hosts: all
  vars:
    provisioner_tool: Docker
    cfg_mgr_tool: Ansible 

  tasks:
    - name: Install apache2 in ubuntu machine
      apt: name=apache2 state=latest update_cache=yes 
      when: ansible_distribution == "Ubuntu" and ansible_os_family == "Debian"

    - name: Fix metalink in centos machine
      copy: src=epel.repo dest=/etc/yum.repos.d/epel.repo 
      when: ansible_distribution == "CentOS" and ansible_os_family == "RedHat"

    - name: Install extra packages for enterprise linux or centos  machine
      yum: name=epel-release state=latest
      when: ansible_distribution == "CentOS" and ansible_os_family == "RedHat"

    - name: Install httpd in centos machine
      yum: name=httpd state=latest 
      when: ansible_distribution == "CentOS" and ansible_os_family == "RedHat"
      tags: centinstall

    - name: create customer web root folder for apche2 server
      file: path=/var/html state=directory mode=0777

    - name: configure apache2 web root folder
      copy: src=000-default.conf dest=/etc/apache2/sites-available/000-default.conf
      when: ansible_distribution == "Ubuntu" and ansible_os_family == "Debian"

    - name: configure centos httpd web root folder
      copy: src=httpd.conf dest=/etc/httpd/conf/httpd.conf
      when: ansible_distribution == "CentOS" and ansible_os_family == "RedHat"

    - name: grant permission for the cusotmer web root folder
      copy: src=apache2.conf dest=/etc/apache2/apache2.conf
      when: ansible_distribution == "Ubuntu" and ansible_os_family == "Debian"

    - name: Restart apache2
      service: name=apache2 state=restarted
      when: ansible_distribution == "Ubuntu" and ansible_os_family == "Debian"

    - name: Restart httpd for centos
      service: name=httpd enabled=true state=restarted
      when: ansible_distribution == "CentOS" and ansible_os_family == "RedHat"

    - name: capture ip address of a machine
      command: hostname -i
      register: ip_addr

    - name: capture hostname
      command: hostname
      register: hname

    - name: Deploy our custome html page
      template: src=index.html.j2 dest=/var/html/index.html

- name: This play will test curl apache2 deploy
  hosts: localhost
  tasks:
    - name: Navigate to ubuntu web page
      shell: "curl http://localhost:800{{item}}"
      with_sequence: start=1 end=4

    - name: Navigate to centos web page
      shell: "curl http://localhost:900{{item}}"
      with_sequence: start=1 end=4
